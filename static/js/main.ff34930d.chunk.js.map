{"version":3,"sources":["panels/slide.js","panels/states.js","App.js","index.js"],"names":["Slide","mystyle","padding","maxWidth","document","documentElement","clientWidth","maxHeight","clientHeight","path_","this","props","number","width","style","justifyContent","display","className","src","alt","React","Component","State","state","current","prev","new_curr","new_prev","console","log","setState","current_slide","divStyle","onClick","changeState","faded","App","useState","size","bridge","send","ReactDOM","render","getElementById"],"mappings":"yOAGMA,E,4JACF,WACI,IAEMC,EAAU,CACZC,QAAS,EACTC,SAJcC,SAASC,gBAAgBC,YAInB,GACpBC,UAJeH,SAASC,gBAAgBG,aAIlB,IAQpBC,EAAQ,+BAAiCC,KAAKC,MAAMC,OAAS,OACnE,OACI,qBAAKC,MAAO,GAAZ,SACI,qBAAKC,MATI,CACbZ,QAAS,EACTa,eAAgB,SAChBC,QAAS,QAML,SAGI,qBAAKC,UAAW,YAAaC,IAAKT,EAAOK,MAAOb,EAASkB,IAAI,a,GArB7DC,IAAMC,WA2BXrB,ICwCAsB,E,kDAjEX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,QAAS,EACTC,KAAM,GALA,E,+CAYd,SAAYC,EAAUC,GAClBC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACTD,EAAW,EACVhB,KAAKoB,SAAS,CACVN,QAAS,EACTC,KAAME,IAGVjB,KAAKoB,SAAS,CACVN,QAASE,EACTD,KAAME,M,oBAKlB,WAAU,IAAD,SAEDI,EAAgBrB,KAAKa,MAAMC,QAEzBQ,GADWtB,KAAKa,MAAME,KACd,GACVvB,QAAS,EACTa,eAAgB,SAChBC,QAAS,QAHC,+BAIM,UAJN,2BAKE,UALF,GAOd,OACI,qBAAKC,UAAW,QAASH,MAAOkB,EAAhC,SASI,sBAAKf,UAAU,WAAf,UACI,wBAAQA,UAAW,OAAQgB,QAAS,kBAAM,EAAKC,YAAYH,EAAgB,EAAGA,IAA9E,qBAGA,wBAAQd,UAAW,OAAQgB,QAAS,kBAAM,EAAKC,YAAYH,EAAgB,EAAGA,IAA9E,qBAGA,cAAC,EAAD,CAAOnB,OAAQmB,EAAeI,MAAO,MAAOjB,IAAK,mB,GAzDjDE,IAAMC,WCkDXe,EA5CH,WACX,MAAsCC,mBAAS,QAA/C,mBACA,GADA,UAC+BA,mBAAS,OAAxC,mBACA,GADA,UAC4BA,mBAAS,cAAC,IAAD,CAAeC,KAAK,YAAzD,6BAsBA,OACC,8BAEC,cAAC,EAAD,OChCHC,IAAOC,KAAK,gBAEZC,IAASC,OAAO,cAAC,EAAD,IAAStC,SAASuC,eAAe,U","file":"static/js/main.ff34930d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './States.css'\r\n// import some from '../Artboards'\r\nclass Slide extends React.Component {\r\n    render() {\r\n        const pageWidth = document.documentElement.clientWidth;\r\n        const pageHeight = document.documentElement.clientHeight;\r\n        const mystyle = {\r\n            padding: 0,\r\n            maxWidth: pageWidth-16,\r\n            maxHeight: pageHeight-16\r\n        };\r\n        const divStyle = {\r\n            padding: 0,\r\n            justifyContent: 'center',\r\n            display: 'flex',\r\n            // alignItems: 'center'\r\n        }\r\n        const path_ = \"./assets/Artboards/Artboard \" + this.props.number + \".png\";\r\n        return (\r\n            <div width={10}>\r\n                <div style={divStyle}>\r\n                    {/* <div>{pageHeight}</div>*/}\r\n                    {/* <div>{pageWidth}</div>*/}\r\n                    <img className={\"someslide\"} src={path_} style={mystyle} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Slide","import React from 'react'\r\nimport Slide from './slide';\r\nimport './States.css'\r\n// import some from '../Artboards'\r\nclass State extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            current: 1,\r\n            prev: 1\r\n        }\r\n    }\r\n    // changeColor() {\r\n    //     this.setState({ black: !this.state.black })\r\n    // }\r\n\r\n    changeState(new_curr, new_prev) {\r\n        console.log(new_curr);\r\n        console.log(new_prev);\r\n        if(new_curr < 1){\r\n            this.setState({\r\n                current: 2,\r\n                prev: new_prev\r\n            })\r\n        }else{\r\n            this.setState({\r\n                current: new_curr,\r\n                prev: new_prev\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // let btn_class = this.state.black ? \"blackButton\" : \"whiteButton\";\r\n        let current_slide = this.state.current;\r\n        let prev_slide = this.state.prev;\r\n        const divStyle = {\r\n            padding: 0,\r\n            justifyContent: 'center',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }\r\n        return (\r\n            <div className={\"outer\"} style={divStyle}>\r\n                {/* <div className={'nullpos1'} style={divStyle}>\r\n                    <button className={\"but\"} onClick={() => this.changeState(current_slide + 1, current_slide)}>\r\n                        Button\r\n                    </button>\r\n                </div>\r\n                <div className='nullpos2'>\r\n                    <Slide number={current_slide} faded={\"out\"} src={\"first\"} />\r\n                </div> */}\r\n                <div className='nullpos2'>\r\n                    <button className={\"but1\"} onClick={() => this.changeState(current_slide - 1, current_slide)}>\r\n                        Button1\r\n                    </button>\r\n                    <button className={\"but2\"} onClick={() => this.changeState(current_slide + 1, current_slide)}>\r\n                        Button2\r\n                    </button>\r\n                    <Slide number={current_slide} faded={\"out\"} src={\"first\"} />\r\n                </div>\r\n                {/* <div>\r\n                    <Slide number={current_slide} faded={\"in\"} src={\"first\"} />\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default State","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, Panel } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport State from './panels/states'\n// import first from '../src/Artboards/Artboard 1.png';\n// import boards from '..src/Artboards';\nimport Home from './panels/Home';\n// import Persik from './panels/Persik';\nimport Slide from './panels/slide';\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\t// useEffect(() => {\n\t// \tbridge.subscribe(({ detail: { type, data } }) => {\n\t// \t\tif (type === 'VKWebAppUpdateConfig') {\n\t// \t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t// \t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t// \t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t// \t\t}\n\t// \t});\n\t// \tasync function fetchData() {\n\t// \t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t// \t\tsetUser(user);\n\t// \t\tsetPopout(null);\n\t// \t}\n\t// \tfetchData();\n\t// }, []);\n\n\t// const go = e => {\n\t// \tsetActivePanel(e.currentTarget.dataset.to);\n\t// };\n\n\treturn (\n\t\t<div>\n\t\t\t{/* <Slide number={3} src={\"first\"}/> */}\n\t\t\t<State></State>\n\t\t</div>\n\t\t// <AdaptivityProvider>\n\t\t// \t<AppRoot>\n\t\t// \t\t<View activePanel={activePanel} popout={popout}>\n\t\t// \t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t// \t\t\t<Persik id='persik' go={go} />\n\t\t// \t\t\t{/* <Panel id='persik'>\n\n\t\t// \t\t\t</Panel> */}\n\t\t// \t\t</View>\n\t\t// \t</AppRoot>\n\t\t// </AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}